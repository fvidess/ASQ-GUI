{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fvide\\\\Desktop\\\\MISC\\\\asq-gui-ts\\\\src\\\\components\\\\auth.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useApi } from '../api';\n\n/*==========================================================\r\n * Authenticate component:\r\n *   Processes response from Google\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authenticate() {\n  _s();\n  const [next, setNext] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const api = useApi();\n\n  // Must do processing as an effect, because we cannot change other\n  // components' state while rendering\n  useEffect(() => {\n    const params = new URLSearchParams(location.hash.substring(1));\n    const token = params.get('id_token');\n    if (token) {\n      api.setToken(token);\n    } else {\n      setError(encodeURIComponent(params.get('error') || 'unknown'));\n    }\n    let state = params.get('state');\n    if (typeof state === 'string' && state.match(/^(\\/[-.\\w]+)+$/)) {\n      setNext(state);\n    } else {\n      setNext('/home');\n    }\n  }, [location, api]);\n\n  // Once processing is done, send them to the correct location\n  if (next !== null) {\n    if (error === null) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: next,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: next + '?error=' + error,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Authenticate, \"i+m80/snKfx7xaXX1FI4Gvb67Z8=\", false, function () {\n  return [useLocation, useApi];\n});\n_c = Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["useEffect","useState","Navigate","useLocation","useApi","jsxDEV","_jsxDEV","Authenticate","_s","next","setNext","error","setError","location","api","params","URLSearchParams","hash","substring","token","get","setToken","encodeURIComponent","state","match","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/fvide/Desktop/MISC/asq-gui-ts/src/components/auth.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useApi } from '../api';\r\n\r\n/*==========================================================\r\n * Authenticate component:\r\n *   Processes response from Google\r\n */\r\n\r\nexport default function Authenticate() {\r\n  const [next, setNext] = useState<string|null>(null);\r\n  const [error, setError] = useState<string|null>(null);\r\n  const location = useLocation();\r\n  const api = useApi();\r\n\r\n  // Must do processing as an effect, because we cannot change other\r\n  // components' state while rendering\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.hash.substring(1));\r\n    const token = params.get('id_token');\r\n    if (token) {\r\n      api.setToken(token);\r\n    }\r\n    else {\r\n      setError(encodeURIComponent(params.get('error') || 'unknown'));\r\n    }\r\n\r\n    let state = params.get('state');\r\n    if (typeof state === 'string' && state.match(/^(\\/[-.\\w]+)+$/)) {\r\n      setNext(state);\r\n    }\r\n    else {\r\n      setNext('/home');\r\n    }\r\n  }, [location, api]);\r\n\r\n  // Once processing is done, send them to the correct location\r\n  if (next !== null) {\r\n    if (error === null) {\r\n      return <Navigate to={next} replace={true} />\r\n    }\r\n    else {\r\n      return <Navigate to={next + '?error=' + error} replace={true} />\r\n    }\r\n  }\r\n  else {\r\n    return <h4>Loading...</h4>;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACrD,MAAMY,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,GAAG,GAAGV,MAAM,EAAE;;EAEpB;EACA;EACAJ,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAG,CAAC,UAAU,CAAC;IACpC,IAAID,KAAK,EAAE;MACTL,GAAG,CAACO,QAAQ,CAACF,KAAK,CAAC;IACrB,CAAC,MACI;MACHP,QAAQ,CAACU,kBAAkB,CAACP,MAAM,CAACK,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC;IAChE;IAEA,IAAIG,KAAK,GAAGR,MAAM,CAACK,GAAG,CAAC,OAAO,CAAC;IAC/B,IAAI,OAAOG,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,KAAK,CAAC,gBAAgB,CAAC,EAAE;MAC9Dd,OAAO,CAACa,KAAK,CAAC;IAChB,CAAC,MACI;MACHb,OAAO,CAAC,OAAO,CAAC;IAClB;EACF,CAAC,EAAE,CAACG,QAAQ,EAAEC,GAAG,CAAC,CAAC;;EAEnB;EACA,IAAIL,IAAI,KAAK,IAAI,EAAE;IACjB,IAAIE,KAAK,KAAK,IAAI,EAAE;MAClB,oBAAOL,OAAA,CAACJ,QAAQ;QAACuB,EAAE,EAAEhB,IAAK;QAACiB,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAC9C,CAAC,MACI;MACH,oBAAOxB,OAAA,CAACJ,QAAQ;QAACuB,EAAE,EAAEhB,IAAI,GAAG,SAAS,GAAGE,KAAM;QAACe,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAClE;EACF,CAAC,MACI;IACH,oBAAOxB,OAAA;MAAAyB,QAAA,EAAI;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC5B;AACF;AAACtB,EAAA,CAvCuBD,YAAY;EAAA,QAGjBJ,WAAW,EAChBC,MAAM;AAAA;AAAA4B,EAAA,GAJIzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}